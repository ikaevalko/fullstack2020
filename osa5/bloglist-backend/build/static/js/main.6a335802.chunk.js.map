{"version":3,"sources":["components/Blog.js","components/BlogForm.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["React","require","Blog","blog","title","author","BlogForm","createBlog","useState","setTitle","setAuthor","url","setUrl","onSubmit","event","preventDefault","type","value","name","onChange","target","Togglable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","token","axios","get","then","response","data","newBlog","config","headers","Authorization","post","newToken","login","credentials","a","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","removeItem","blogObject","returnedBlog","concat","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a335802.chunk.js","sourcesContent":["const React = require('react')\n\nconst Blog = ({ blog }) => {\n  return (\n    <div>\n      {blog.title} {blog.author}\n    </div>\n  )\n}\n\nexport default Blog","import React, {useState} from 'react' \n\nconst BlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    const blog = {\n      title: title,\n      author: author,\n      url: url\n    }\n\n    createBlog(blog)\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <>\n      <h2>create new</h2>\n      <form onSubmit={addBlog}>\n        <div>\n          title:\n            <input\n            type=\"text\"\n            value={title}\n            name=\"Title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n            <input\n            type=\"text\"\n            value={author}\n            name=\"Author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          url:\n            <input\n            type=\"text\"\n            value={url}\n            name=\"URL\"\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button type=\"submit\">create</button>\n      </form>\n    </>\n  )\n}\n\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return { toggleVisibility }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => { token = `bearer ${newToken}` }\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newBlog => {\n  const config = { headers: { Authorization: token } }\n  return axios\n    .post(baseUrl, newBlog, config)\n    .then(response => response.data)\n}\n\nexport default { getAll, create, setToken}","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    \n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem('loggedUser', JSON.stringify(user)) \n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n  const createBlog = (blogObject) => {\n    blogService\n    .create(blogObject)\n    .then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog))\n    })\n  }\n\n  if (!user) {\n    return (\n      <>\n        <h2>log in to application</h2>\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n              <input\n              type=\"text\"\n              value={username}\n              name=\"Username\"\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n            password\n              <input\n              type=\"password\"\n              value={password}\n              name=\"Password\"\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button type=\"submit\">login</button>\n        </form>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <h2>blogs</h2>\n      {user.name} logged in\n      <button onClick={handleLogout}>logout</button>\n      <br/><br/>\n      <Togglable buttonLabel='new blog'>\n        <BlogForm createBlog={createBlog} />\n      </Togglable>\n      <br/><br/>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}