{"version":3,"sources":["components/Togglable.js","components/Blog.js","components/BlogForm.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","showButtonLabel","className","children","hideButtonLabel","displayName","require","Blog","blog","title","author","url","likes","user","name","BlogForm","createBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","type","value","onChange","target","token","axios","get","then","response","data","newBlog","config","headers","Authorization","post","newToken","login","credentials","a","App","blogs","setBlogs","username","setUsername","password","setPassword","setUser","error","setError","blogFormRef","createRef","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","console","log","setTimeout","removeItem","blogObject","current","returnedBlog","concat","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35d9ef1b.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return { toggleVisibility }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.showButtonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>{props.hideButtonLabel}</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  showButtonLabel: PropTypes.string.isRequired,\n  hideButtonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import PropTypes from 'prop-types'\nimport Togglable from './Togglable'\nconst React = require('react')\n\nconst Blog = ({ blog }) => {\n  return (\n    <div className=\"blog\">\n      {blog.title} {blog.author}\n      <Togglable\n        showButtonLabel='view'\n        hideButtonLabel='hide'>\n        <div>\n          {blog.url}<br/>\n          likes {blog.likes}<br/>\n          {blog.user ? blog.user.name : ''}\n        </div>\n      </Togglable>\n    </div>\n  )\n}\n\nBlog.propTypes = {\n  blog: PropTypes.object.isRequired\n}\n\nexport default Blog","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    const blog = {\n      title: title,\n      author: author,\n      url: url\n    }\n\n    createBlog(blog)\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <>\n      <h2>create new</h2>\n      <form onSubmit={addBlog}>\n        <div>\n          title:\n          <input\n            type=\"text\"\n            value={title}\n            name=\"Title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            type=\"text\"\n            value={author}\n            name=\"Author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          url:\n          <input\n            type=\"text\"\n            value={url}\n            name=\"URL\"\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button type=\"submit\">create</button>\n      </form>\n    </>\n  )\n}\n\nBlogForm.propTypes = {\n  createBlog: PropTypes.func.isRequired\n}\n\nexport default BlogForm","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => { token = `bearer ${newToken}` }\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newBlog => {\n  const config = { headers: { Authorization: token } }\n  return axios\n    .post(baseUrl, newBlog, config)\n    .then(response => response.data)\n}\n\nexport default { getAll, create, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [error, setError] = useState('')\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n    setError('')\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      console.log('login failed')\n      setError('wrong credentials')\n\n      setTimeout(() => {\n        setError('')\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n  const createBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n      })\n  }\n\n  if (!user) {\n    return (\n      <>\n        <h2>log in to application</h2>\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n            <input\n              type=\"text\"\n              value={username}\n              name=\"Username\"\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n            password\n            <input\n              type=\"password\"\n              value={password}\n              name=\"Password\"\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button type=\"submit\">login</button>\n        </form>\n        <br/>\n        {error ? error : ''}\n      </>\n    )\n  }\n\n  return (\n    <>\n      <h2>blogs</h2>\n      {user.name} logged in\n      <button onClick={handleLogout}>logout</button>\n      <br/><br/>\n      <Togglable\n        showButtonLabel='new blog'\n        hideButtonLabel='cancel'\n        ref={blogFormRef}>\n        <BlogForm createBlog={createBlog} />\n      </Togglable>\n      <br/><br/>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}